"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[42019],{26335:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"2025/debian-packaging/updates/2025-07-03","title":"Community Bonding","description":"\x3c!--","source":"@site/docs/2025/debian-packaging/updates/2025-07-03.md","sourceDirName":"2025/debian-packaging/updates","slug":"/2025/debian-packaging/updates/2025-07-03","permalink":"/gsoc/docs/2025/debian-packaging/updates/2025-07-03","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2025/debian-packaging/updates/2025-07-03.md","tags":[{"inline":true,"label":"gsoc25","permalink":"/gsoc/docs/tags/gsoc-25"},{"inline":true,"label":"debian-packaging","permalink":"/gsoc/docs/tags/debian-packaging"},{"inline":true,"label":"fossology","permalink":"/gsoc/docs/tags/fossology"}],"version":"current","frontMatter":{"title":"Community Bonding","author":"Ahmed Gamal","author_url":"https://github.com/Ahmed-Gamal24","tags":["gsoc25","debian-packaging","fossology"]},"sidebar":"2025","previous":{"title":"Introduction","permalink":"/gsoc/docs/2025/debian-packaging/"},"next":{"title":"Week 1","permalink":"/gsoc/docs/2025/debian-packaging/updates/2025-07-11"}}');var s=i(74848),a=i(28453);const o={title:"Community Bonding",author:"Ahmed Gamal",author_url:"https://github.com/Ahmed-Gamal24",tags:["gsoc25","debian-packaging","fossology"]},c="Community Bonding Meetings and Activities",r={},d=[{value:"Introduction Meeting",id:"introduction-meeting",level:2},{value:"Meeting 1",id:"meeting-1",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Project Goal",id:"project-goal",level:3},{value:"Project Exploration",id:"project-exploration",level:3},{value:"Practice with Debian Packaging",id:"practice-with-debian-packaging",level:3},{value:"Technical Setup",id:"technical-setup",level:3},{value:"Contributions to the Packaging Repo",id:"contributions-to-the-packaging-repo",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"community-bonding-meetings-and-activities",children:"Community Bonding Meetings and Activities"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction-meeting",children:"Introduction Meeting"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Date:"})," Jul 3, 2025"]}),"\n",(0,s.jsx)(n.p,{children:"This was the first meeting for me in GSoC 2025, where I met with my mentors and other contributors in the Fossology community. The mentors outlined communication expectations and helped me understand the importance of engaging with the broader Debian and Fossology ecosystems."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"meeting-1",children:"Meeting 1"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Date:"})," Jul 3, 2025"]}),"\n",(0,s.jsx)(n.h3,{id:"attendees",children:"Attendees"}),"\n",(0,s.jsx)(n.p,{children:"Complete FOSSology Community including"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Org admins"}),"\n",(0,s.jsx)(n.li,{children:"Mentors of all the projects"}),"\n",(0,s.jsx)(n.li,{children:"Contributors for GSoC 2025"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"project-goal",children:"Project Goal"}),"\n",(0,s.jsxs)(n.p,{children:["The project goal is to ",(0,s.jsx)(n.strong,{children:"create Debian packages for Fossology"})," so that it can be easily installed with all of its dependencies using standard Debian tools (e.g., ",(0,s.jsx)(n.code,{children:"apt install fossology"}),"). The goal is not a single ",(0,s.jsx)(n.code,{children:".deb"})," file, but rather ",(0,s.jsx)(n.strong,{children:"multiple packages"}),", each handling a module of Fossology in a clean and maintainable way."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"project-exploration",children:"Project Exploration"}),"\n",(0,s.jsxs)(n.p,{children:["I began by exploring the Fossology project structure, especially the ",(0,s.jsx)(n.code,{children:"debian/"})," directory, which is central to any Debian packaging effort. Here's what I found and learned:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"debian/changelog"})})," \u2014 Keeps a history of changes and versions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"debian/control"})})," \u2014 Defines each binary package with its description and dependencies."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"debian/rules"})})," \u2014 The build script, usually based on ",(0,s.jsx)(n.code,{children:"dh"})," and compatible with ",(0,s.jsx)(n.code,{children:"CMake"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Branches:"})," I cloned the Salsa repo using ",(0,s.jsx)(n.code,{children:"gbp"})," and ensured I had ",(0,s.jsx)(n.code,{children:"master"}),", ",(0,s.jsx)(n.code,{children:"upstream"}),", and ",(0,s.jsx)(n.code,{children:"pristine-tar"})," branches, as recommended."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"practice-with-debian-packaging",children:"Practice with Debian Packaging"}),"\n",(0,s.jsx)(n.p,{children:"To become comfortable with packaging:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["I ",(0,s.jsx)(n.strong,{children:"read Debian packaging documentation and articles"})," to understand the tools, workflows, and best practices."]}),"\n",(0,s.jsxs)(n.li,{children:["I ",(0,s.jsx)(n.strong,{children:"created my own dummy Debian package"})," as a practice project using ",(0,s.jsx)(n.code,{children:"dh_make"}),", ",(0,s.jsx)(n.code,{children:"debuild"}),", and manual editing of control files."]}),"\n",(0,s.jsxs)(n.li,{children:["I ",(0,s.jsxs)(n.strong,{children:["used ",(0,s.jsx)(n.code,{children:"pbuilder"})]}),", a tool that creates an isolated chroot environment for building packages, ensuring my package doesn't rely on my system setup."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"technical-setup",children:"Technical Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set up local development environment."}),"\n",(0,s.jsxs)(n.li,{children:["Cloned the upstream Fossology code and imported it properly with ",(0,s.jsx)(n.code,{children:"gbp import-orig"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Linked changes to the upstream tarball and started iterating on package builds."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"contributions-to-the-packaging-repo",children:"Contributions to the Packaging Repo"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Began cleaning up and completing the ",(0,s.jsx)(n.code,{children:"debian/"})," directory."]}),"\n",(0,s.jsx)(n.li,{children:"Verified that each binary package matched the source structure."}),"\n",(0,s.jsxs)(n.li,{children:["Adjusted CMake configurations to unify the build process (e.g., ",(0,s.jsx)(n.code,{children:"install/db"})," was integrated into CMake using a patch)."]}),"\n",(0,s.jsxs)(n.li,{children:["Identified and removed unneeded ",(0,s.jsx)(n.code,{children:".install"})," files when ",(0,s.jsx)(n.code,{children:"debian/rules"})," was sufficient."]}),"\n",(0,s.jsxs)(n.li,{children:["Started reviewing and fixing ",(0,s.jsx)(n.code,{children:"lintian"})," warnings for compliance."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var t=i(96540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);