"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[787],{28453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>a});var n=i(96540);const t={},o=n.createContext(t);function r(e){const s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(o.Provider,{value:s},e.children)}},31460:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"2024/spdx-expression/updates/2024-05-28","title":"Week 1","description":"\x3c!--","source":"@site/docs/2024/spdx-expression/updates/2024-05-28.md","sourceDirName":"2024/spdx-expression/updates","slug":"/2024/spdx-expression/updates/2024-05-28","permalink":"/gsoc/docs/2024/spdx-expression/updates/2024-05-28","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2024/spdx-expression/updates/2024-05-28.md","tags":[{"inline":true,"label":"gsoc24","permalink":"/gsoc/docs/tags/gsoc-24"},{"inline":true,"label":"spdx-expression","permalink":"/gsoc/docs/tags/spdx-expression"}],"version":"current","frontMatter":{"title":"Week 1","author":"Akash Sah","tags":["gsoc24","spdx-expression"]},"sidebar":"2024","previous":{"title":"Community Bonding Report","permalink":"/gsoc/docs/2024/spdx-expression/updates/2024-05-07"},"next":{"title":"Week 2","permalink":"/gsoc/docs/2024/spdx-expression/updates/2024-06-04"}}');var t=i(74848),o=i(28453);const r={title:"Week 1",author:"Akash Sah",tags:["gsoc24","spdx-expression"]},a="Week 1 meeting and activities",d={},c=[{value:"Attendees:",id:"attendees",level:2},{value:"Discussions",id:"discussions",level:2},{value:"Prototype Presentation",id:"prototype-presentation",level:3},{value:"Schema Proposal",id:"schema-proposal",level:3},{value:"Activities",id:"activities",level:2}];function l(e){const s={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"week-1-meeting-and-activities",children:"Week 1 meeting and activities"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"(May 28,2024)"})}),"\n",(0,t.jsx)(s.h2,{id:"attendees",children:"Attendees:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://github.com/Akashsah2003",children:"Akash Sah"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal M MD"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://github.com/deo002",children:"Dearsh Oberoi"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://github.com/abhi-kumar17871",children:"Abhishek Kumar"})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"discussions",children:"Discussions"}),"\n",(0,t.jsx)(s.h3,{id:"prototype-presentation",children:"Prototype Presentation"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Presented a prototype for scanning expressions with OJO."}),"\n",(0,t.jsx)(s.li,{children:"Initially, I was storing expressions directly as strings."}),"\n",(0,t.jsx)(s.li,{children:"Received feedback that storing expressions as strings could not allow modifications."}),"\n",(0,t.jsx)(s.li,{children:"Recieved suggestion to store license names as their references (licenseId) and the relationships between them (operators)."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"schema-proposal",children:"Schema Proposal"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Was asked to propose a schema for storing license expressions."}),"\n",(0,t.jsx)(s.li,{children:"Inquired if using a graph database like Neo4j would be suitable."}),"\n",(0,t.jsx)(s.li,{children:"It was considered a good idea but mentors suggested not to use it as mixing two databases (PostgreSQL and Neo4j) would complicate things."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"activities",children:"Activities"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Researched various methods to store license expressions."}),"\n",(0,t.jsx)(s.li,{children:"Found that an Abstract Syntax Tree (AST) is a good way to store expressions."}),"\n",(0,t.jsxs)(s.li,{children:["Proposed two types of ",(0,t.jsx)(s.a,{href:"https://docs.google.com/document/d/1xYONSMBMQsLsGG3IIHD0gwJA0OP2-xPecLIaisIvupM/edit?usp=sharing",children:"schema"})," for storing license expressions."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);