"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[77975],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var i=s(96540);const t={},l=i.createContext(t);function c(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(l.Provider,{value:n},e.children)}},53877:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"2021/scancode/updates/2021-06-29","title":"Week 4","description":"\x3c!--","source":"@site/docs/2021/scancode/updates/2021-06-29.md","sourceDirName":"2021/scancode/updates","slug":"/2021/scancode/updates/2021-06-29","permalink":"/gsoc/docs/2021/scancode/updates/2021-06-29","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2021/scancode/updates/2021-06-29.md","tags":[],"version":"current","frontMatter":{"title":"Week 4","author":"Sarita"},"sidebar":"2021","previous":{"title":"Week 3","permalink":"/gsoc/docs/2021/scancode/updates/2021-06-22"},"next":{"title":"Week 5","permalink":"/gsoc/docs/2021/scancode/updates/2021-07-06"}}');var t=s(74848),l=s(28453);const c={title:"Week 4",author:"Sarita"},d=void 0,r={},a=[{value:"Coding Week 4 Meeting 1",id:"coding-week-4-meeting-1",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Week 3 Progress",id:"week-3-progress",level:3},{value:"Discussions",id:"discussions",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",level:3},{value:"Coding Week 4 Meeting 2",id:"coding-week-4-meeting-2",level:2},{value:"Attendees",id:"attendees-1",level:3},{value:"Discussions",id:"discussions-1",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans-1",level:3}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"coding-week-4-meeting-1",children:"Coding Week 4 Meeting 1"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Date:2021-06-29"})}),"\n",(0,t.jsx)(n.h3,{id:"attendees",children:"Attendees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra "})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/mcjaeger",children:"Michael C. Jaeger"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal Kumar "})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/itssingh",children:"Sarita Singh "})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"week-3-progress",children:"Week 3 Progress"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Populated ScanCode wrapper to include copyright and author information."}),"\n",(0,t.jsx)(n.li,{children:"Currently using FOSSology copyright and author database tables to insert these information."}),"\n",(0,t.jsx)(n.li,{children:"FOSSology Scheduler is calling ScanCode for copyright and author along with licenses."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"discussions",children:"Discussions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Asked how to copyright agent is generating hash for copyright and author tables?","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Hash is md5(content)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["What is clearing table in copyright agent database ",(0,t.jsx)(n.a,{href:"https://github.com/fossology/fossology/blob/master/src/copyright/agent/database.cc#L248-L308",children:"here"})," ?","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["This code block creates ",(0,t.jsx)(n.code,{children:"copyright_decision"})," table."]}),"\n",(0,t.jsx)(n.li,{children:"This table is used to store user's decision."}),"\n",(0,t.jsxs)(n.li,{children:["Similarly there are ",(0,t.jsx)(n.code,{children:"license_decision"})," table which stores ",(0,t.jsx)(n.code,{children:"user's clearing decision"})," for licenses."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Gaurav explained how copyright agent/user finding works.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Agent findings contain what scanners has found, if a user makes changes in the agents finding that changes will be recorded into ",(0,t.jsx)(n.code,{children:"copyright_event"})," table."]}),"\n",(0,t.jsxs)(n.li,{children:["For the same ",(0,t.jsx)(n.code,{children:"pfile"})," that agent will give edited result."]}),"\n",(0,t.jsxs)(n.li,{children:["User finding table records ",(0,t.jsx)(n.code,{children:"user_decision"})," during clearing in the ",(0,t.jsx)(n.code,{children:"UI"})," and that content is inserted into ",(0,t.jsx)(n.code,{children:"copyright_decision"})," table in the database."]}),"\n",(0,t.jsx)(n.li,{children:"These clearing results are helpful during creating report."}),"\n",(0,t.jsxs)(n.li,{children:["Scancode will also include ",(0,t.jsx)(n.code,{children:"reporting"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Avinal asked question about how to ",(0,t.jsx)(n.code,{children:"reuse"})," an upload for different agent without reloading?","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gaurav explained following:"}),"\n",(0,t.jsx)(n.li,{children:"Under Jobs go to Schedule agents, there select an upload to analyse and the agent who will do analysis."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Gaurav suggested a ",(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=TZqU5ZALI7U",children:"FOSSology Using: End-to-end workflow"})," video on YouTube."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"conclusion-and-further-plans",children:"Conclusion and Further Plans"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Creating tables for scancode copyright and author."}),"\n",(0,t.jsx)(n.li,{children:"Watch end-to-end fossology workflow video and understand fossology UI and working."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"coding-week-4-meeting-2",children:"Coding Week 4 Meeting 2"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Date:2021-07-02"})}),"\n",(0,t.jsx)(n.h3,{id:"attendees-1",children:"Attendees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra "})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal Kumar "})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/itssingh",children:"Sarita Singh "})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"discussions-1",children:"Discussions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.code,{children:"S"})," instead of ",(0,t.jsx)(n.code,{children:"L"})," for ScanCode type field in the highlight table where ",(0,t.jsx)(n.code,{children:"S"})," will be match property of the highlight class in HighlightDao.php."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Added a new type ",(0,t.jsx)(n.code,{children:"S"})," in the ",(0,t.jsx)(n.code,{children:"HighlightDao.php"})," also changed type from ",(0,t.jsx)(n.code,{children:"signature"})," to ",(0,t.jsx)(n.code,{children:"match"})," as like monk agent ScanCode matches text."]}),"\n",(0,t.jsx)(n.li,{children:"Gaurav explained about identical displayed on the UI by monk scanner as, It highlight those text which are identical with the license text in the license_ref table. Whereas license relevant text means the highlighted text has been matched with license text or rules written for the license."}),"\n",(0,t.jsx)(n.li,{children:"So license relevant text is suitable for the ScanCode highlight."}),"\n",(0,t.jsx)(n.li,{children:"Also Gaurav suggested to reuse the resources already present and no need to add a new type for scancode highlight, nomos type could be reused."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Sarita(Me) shows newly created tables for scancode_copyright and scancode_author. Gaurav approved changes."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Added a function in the scancode database to insert no license in the license_file table for a code zip have no license."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"  bool ScancodeDatabaseHandler::insertNoResultInDatabase(int agentId, long pFileId ){\n    return saveLicenseMatch(agentId, pFileId, 320, NULL);\n  }\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Gaurav clarified that ",(0,t.jsx)(n.code,{children:"320"})," is not constant licenseId for no-license. So instead leave licenseId null."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"There is still a discussion needed (with other mentors) to decide is no license case is needed to take care for ScanCode or not."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"conclusion-and-further-plans-1",children:"Conclusion and Further Plans"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Start implementing UI to make scancode a parameterized agent."}),"\n",(0,t.jsxs)(n.li,{children:["Discuss about ",(0,t.jsx)(n.code,{children:"no license/copyright/author"})," case for scancode."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);