"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[1452],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},75220:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"2025/osselot/updates/2025-06-09","title":"Week 1","description":"\x3c!--","source":"@site/docs/2025/osselot/updates/2025-06-09.md","sourceDirName":"2025/osselot/updates","slug":"/2025/osselot/updates/2025-06-09","permalink":"/gsoc/docs/2025/osselot/updates/2025-06-09","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2025/osselot/updates/2025-06-09.md","tags":[{"inline":true,"label":"gsoc25","permalink":"/gsoc/docs/tags/gsoc-25"},{"inline":true,"label":"OSSelot","permalink":"/gsoc/docs/tags/os-selot"}],"version":"current","frontMatter":{"title":"Week 1","author":"Vaibhav Sahu","tags":["gsoc25","OSSelot"]},"sidebar":"2025","previous":{"title":"Community bonding","permalink":"/gsoc/docs/2025/osselot/updates/2025-06-02"},"next":{"title":"Week 2","permalink":"/gsoc/docs/2025/osselot/updates/2025-06-16"}}');var i=s(74848),o=s(28453);const r={title:"Week 1",author:"Vaibhav Sahu",tags:["gsoc25","OSSelot"]},l="Week 1",c={},a=[{value:"Meeting 1",id:"meeting-1",level:2},{value:"Attendees",id:"attendees",level:2},{value:"Discussions",id:"discussions",level:2},{value:"Updates",id:"updates",level:2},{value:"Planning for Next Week",id:"planning-for-next-week",level:2}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"week-1",children:"Week 1"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"(June 3, 2025 - June 9, 2025)"})}),"\n",(0,i.jsx)(n.h2,{id:"meeting-1",children:"Meeting 1"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"(June 3, 2025)"})}),"\n",(0,i.jsx)(n.h2,{id:"attendees",children:"Attendees"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/Vaibhavsahu2810",children:"Vaibhav Sahu"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/JanAltenberg",children:"Jan Altenberg"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"discussions",children:"Discussions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["I have completed the first task by introducing a new per-upload configuration flag, ",(0,i.jsx)(n.strong,{children:"EnableOsselotExport"}),", and shared a diff comparison showing export files with and without the flag. Jan reviewed the changes and approved them."]}),"\n",(0,i.jsxs)(n.li,{children:["Jan suggested a few refinements: renaming the checkbox for clarity and merging the existing \u201clicense comment\u201d flag into the ",(0,i.jsx)(n.strong,{children:"EnableOsselotExport"})," option, which I have incorporated."]}),"\n",(0,i.jsxs)(n.li,{children:["While testing large uploads, I hit a \u201cmemory limit exceeded\u201d error. Jan recommended updating the ",(0,i.jsx)(n.code,{children:"memory_limit"})," and related PHP settings in ",(0,i.jsx)(n.code,{children:"/etc/php/8.2/apache2/php.ini"})," to resolve this."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"updates",children:"Updates"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Introduces a new per\u2010upload configuration flag, ",(0,i.jsx)(n.strong,{children:"EnableOsselotExport"}),", under",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Browse \u2192 Pfile \u2192 Conf \u2192 Report Configuration \u2192 SPDX Report Settings"}),". When checked for a given upload, all SPDX-based exports (SPDX-TV, SPDX RDF/XML) and the ReadMeOSS agent adopt OSSelot-compatible behavior."]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Added per-upload OSSelot toggle"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/2bb1927d-e280-46d2-b059-e9b6310f1853",alt:"Enable OSSelot Export checkbox"}),(0,i.jsx)(n.br,{}),"\n","Introduced a third checkbox (\u201cEnable OSSelot Export\u201d)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"SPDX-TV Export"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["In ",(0,i.jsx)(n.strong,{children:"License Information"}),", list ",(0,i.jsx)(n.strong,{children:"every"})," license (including those previously unprefixed)."]}),"\n",(0,i.jsxs)(n.li,{children:["Rewrite custom licenses as ",(0,i.jsx)(n.code,{children:"LicenseRef-See-file.LICENSE"})," (no ",(0,i.jsx)(n.code,{children:"-fossology-"}),").",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/8bb6c601-6d93-43d4-9da2-3227cc8ede3a",alt:"SPDX-TV before/after"})]}),"\n",(0,i.jsxs)(n.li,{children:["Print each license\u2019s full text. Include any license comments if present.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/e813fc26-8817-4ba7-85f5-f7dbe8c4ae68",alt:"Full text and comments in SPDX-TV"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"SPDX RDF/XML Export"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Apply identical logic: emit all licenses , strip ",(0,i.jsx)(n.code,{children:"-fossology-"}),", prepend ",(0,i.jsx)(n.code,{children:"LicenseRef-"})," when needed, and include full license text.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/b74a625d-6d83-40c3-bb6d-83a9bab9e493",alt:"SPDX RDF/XML before/after 1"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/f671d231-7d1e-4a47-8740-859c7afdfaee",alt:"SPDX RDF/XML before/after 2"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"ReadMeOSS Output"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Strip both ",(0,i.jsx)(n.code,{children:"LicenseRef-fossology-"})," and ",(0,i.jsx)(n.code,{children:"LicenseRef-"})," from each license line.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/c3e8e188-395c-499e-82b1-216e4c54c33e",alt:"ReadMeOSS output without prefixes"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"planning-for-next-week",children:"Planning for Next Week"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"I will start working on my next part of my project where i need to extend the upload page\u2019s reuse settings by adding a \u201cReuse from OSSelot\u201d section so users can pull in clearing decisions directly from OSSelot reports."}),"\n",(0,i.jsx)(n.li,{children:"I\u2019m going to dive into the Report-Import agent\u2019s code and workflow to understand how it ingests external reports, then adapt that logic for OSSelot-sourced data."}),"\n",(0,i.jsx)(n.li,{children:"Map out OSSelot\u2019s REST API\u2014identifying the endpoints for version metadata and RDF/XML report files\u2014so I can fetch and integrate those artifacts programmatically."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);