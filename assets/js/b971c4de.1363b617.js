"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[74980],{28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var i=o(96540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}},54612:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"2024/ci-scanner/index","title":"Introduction","description":"\x3c!--","source":"@site/docs/2024/ci-scanner/index.md","sourceDirName":"2024/ci-scanner","slug":"/2024/ci-scanner/","permalink":"/gsoc/docs/2024/ci-scanner/","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2024/ci-scanner/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Introduction","slug":"/2024/ci-scanner/"},"sidebar":"2024","previous":{"title":"REST API Guidelines","permalink":"/gsoc/docs/2024/rest/API-guidelines"},"next":{"title":"Community bonding","permalink":"/gsoc/docs/2024/ci-scanner/updates/2024-05-07"}}');var t=o(74848),s=o(28453);const l={sidebar_position:1,title:"Introduction",slug:"/2024/ci-scanner/"},r=void 0,c={},a=[{value:"Author",id:"author",level:2},{value:"Contact info",id:"contact-info",level:2},{value:"Project title",id:"project-title",level:2},{value:"What&#39;s the project about?",id:"whats-the-project-about",level:2},{value:"What should be done?",id:"what-should-be-done",level:2},{value:"Reporting line numbers for violations",id:"reporting-line-numbers-for-violations",level:3},{value:"Keyword scanning using custom keyword.conf",id:"keyword-scanning-using-custom-keywordconf",level:3},{value:"Providing allowlist.json from a different path",id:"providing-allowlistjson-from-a-different-path",level:3},{value:"Allow users to download and scan dependencies",id:"allow-users-to-download-and-scan-dependencies",level:3},{value:"Steps to achieve this:",id:"steps-to-achieve-this",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"author",children:"Author"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/rajuljha",children:"Rajul Jha"})}),"\n",(0,t.jsx)(n.h2,{id:"contact-info",children:"Contact info"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"mailto:rajuljha49@gmail.com",children:"Email"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://linkedin.com/in/rajuljha",children:"LinkedIn"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"project-title",children:"Project title"}),"\n",(0,t.jsx)(n.p,{children:"CI Scanner Improvements"}),"\n",(0,t.jsx)(n.h2,{id:"whats-the-project-about",children:"What's the project about?"}),"\n",(0,t.jsxs)(n.p,{children:["To be able to easily and continuously scan packages with\nfossology checks in CI pipelines, a docker image ",(0,t.jsxs)(n.a,{href:"https://hub.docker.com/layers/fossology/fossology/scanner/images/sha256-a625b1b10832b98d47429387c18b4fb042f7b09f912b50da14da61fddb11a2ff?context=explore",children:["fossology/fossology",":scanner"]})," capable of running license checks (using nomos or ojo) and keyword and copyright scans is available."]}),"\n",(0,t.jsx)(n.p,{children:"The main aims of this projects is to improve the CI pipeline with various quality of life improvements like:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Highlight the exact location of violations in the results."}),"\n",(0,t.jsx)(n.li,{children:"Enable customization of keywords used by the scanner."}),"\n",(0,t.jsx)(n.li,{children:"Allow whitelisting from a custom location."}),"\n",(0,t.jsx)(n.li,{children:"Provide the ability to download and scan dependencies."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"what-should-be-done",children:"What should be done?"}),"\n",(0,t.jsx)(n.h3,{id:"reporting-line-numbers-for-violations",children:"Reporting line numbers for violations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For calculating the previous and new line number from the diff scan output, an algorithm has to be made."}),"\n",(0,t.jsx)(n.li,{children:"The line number start byte and end byte information is spit out by all scanners except nomos in json output. That has to be fixed."}),"\n",(0,t.jsx)(n.li,{children:"Add the line number calculated to the finding log information as well as write it in results file."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"keyword-scanning-using-custom-keywordconf",children:"Keyword scanning using custom keyword.conf"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Currently, the keyword scanner uses a predefined set of keywords stored at ",(0,t.jsx)(n.code,{children:"/usr/local/share/fossology/keyword/agent/keyword.conf."})]}),"\n",(0,t.jsx)(n.li,{children:"To support this, we also need to document the regex-like format used for specifying these keywords."}),"\n",(0,t.jsxs)(n.li,{children:["Decision to be made : Should custom ",(0,t.jsx)(n.code,{children:"keyword.conf"})," overwrite the previous one?"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"providing-allowlistjson-from-a-different-path",children:"Providing allowlist.json from a different path"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Currently, the ",(0,t.jsx)(n.code,{children:"allowlist.json"})," is located at the root of the project."]}),"\n",(0,t.jsx)(n.li,{children:"We want to allow users to optionally specify a different path, using a CLI argument, like --allowlist"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"allow-users-to-download-and-scan-dependencies",children:"Allow users to download and scan dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Currently, the project only scans the source code of the project either in repo/diff manner."}),"\n",(0,t.jsx)(n.li,{children:"We additionally want to allow the functionality to scan and dependencies of the project."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"steps-to-achieve-this",children:"Steps to achieve this:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["With the ",(0,t.jsx)(n.a,{href:"https://cyclonedx.org/tool-center/",children:"CycloneDX"})," tool center, we can generate SBOM which contains the dependency download url."]}),"\n",(0,t.jsx)(n.li,{children:"The SBOM format specifies the package URL (purl) for each dependency."}),"\n",(0,t.jsxs)(n.li,{children:["Using the ",(0,t.jsx)(n.a,{href:"https://github.com/package-url/packageurl-python#purl-to-url",children:"python-packageurl"})," tool, we can extract the download url from the purl for this purpose."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);