"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[98898],{20210:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/newJobs-55bbc53b067b586f13bfacc5c08d682f.png"},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>r});var t=n(96540);const i={},o=t.createContext(i);function d(e){const s=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(o.Provider,{value:s},e.children)}},92544:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"2024/rest/updates/Divij/2024-07-02","title":"Week 6","description":"\x3c!--","source":"@site/docs/2024/rest/updates/Divij/2024-07-02.md","sourceDirName":"2024/rest/updates/Divij","slug":"/2024/rest/updates/Divij/2024-07-02","permalink":"/gsoc/docs/2024/rest/updates/Divij/2024-07-02","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2024/rest/updates/Divij/2024-07-02.md","tags":[{"inline":true,"label":"gsoc24","permalink":"/gsoc/docs/tags/gsoc-24"},{"inline":true,"label":"rest","permalink":"/gsoc/docs/tags/rest"}],"version":"current","frontMatter":{"title":"Week 6","author":"Divij Sharma","tags":["gsoc24","rest"]},"sidebar":"2024","previous":{"title":"Week 5","permalink":"/gsoc/docs/2024/rest/updates/Divij/2024-06-25"},"next":{"title":"Week 7","permalink":"/gsoc/docs/2024/rest/updates/Divij/2024-07-09"}}');var i=n(74848),o=n(28453);const d={title:"Week 6",author:"Divij Sharma",tags:["gsoc24","rest"]},r="Week 6 meeting and activities",l={},a=[{value:"Attendees",id:"attendees",level:2},{value:"Discussion",id:"discussion",level:2},{value:"Activities",id:"activities",level:2}];function c(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"week-6-meeting-and-activities",children:"Week 6 meeting and activities"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"(July 02,2024)"})}),"\n",(0,i.jsx)(s.h2,{id:"attendees",children:"Attendees"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/dvjsharma",children:"Divij Sharma"})}),"\n",(0,i.jsx)(s.li,{children:"Katharina Ettinger"}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal M MD"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"discussion",children:"Discussion"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Gave updates and demo on previous week's work."}),"\n",(0,i.jsx)(s.li,{children:"Discussed on the endpoint requirements for the Jobs API."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"activities",children:"Activities"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Modified ",(0,i.jsx)(s.code,{children:"/jobs"}),", ",(0,i.jsx)(s.code,{children:"/jobs/{id}"}),", ",(0,i.jsx)(s.code,{children:"/jobs/all"})," endpoints considering the following points:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Currently, the structure of the ",(0,i.jsx)(s.code,{children:"jobs"})," object returned by these endpoints is as follows:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n    {\n        "id": <job id>,\n        "name": <name of the job (upload name)>,\n        "queueDate": <job queue date>,\n        "uploadId": <upload id of the package>,\n        "userId": <user id of the user>,\n        "groupId": <group id of the user>,\n        "eta": <time left>,\n        "status": <job status (completed, killed, failed, etc.)>\n    }\n]\n'})}),"\n",(0,i.jsxs)(s.p,{children:["This structure has the following problems, as outlined in #",(0,i.jsx)(s.a,{href:"https://github.com/fossology/fossology/issues/1301",children:"1301"}),", #",(0,i.jsx)(s.a,{href:"https://github.com/fossology/fossology/issues/1800",children:"1800"})," and #",(0,i.jsx)(s.a,{href:"https://github.com/fossology/fossology/issues/1972",children:"1972"}),"."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"The structure is very simple, and does not provide much information about the job."}),"\n",(0,i.jsxs)(s.li,{children:["For example, the ",(0,i.jsx)(s.code,{children:"agent"})," triggered by the job is not present in the response."]}),"\n",(0,i.jsx)(s.li,{children:"There is no information about child jobs being executed, and what is the status of each child job."}),"\n",(0,i.jsxs)(s.li,{children:["The information about ",(0,i.jsx)(s.code,{children:"status"})," is redundant and returns invalid response for some testcases."]}),"\n",(0,i.jsx)(s.li,{children:"(After queue was added) The parent job status is determined by the success/failure of all the jobs related to that specific upload, and not the child jobs."}),"\n",(0,i.jsx)(s.li,{children:"This, along with the current structure, makes it impossible to determine what exactly failed."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"To handle all the things mentioned in point 1, I modified the structure as:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n    {\n        "id": <job id>,\n        "name": <name of the job (upload name)>,\n        "queueDate": <job queue date>,\n        "uploadId": <upload id of the package>,\n        "userId": <user id of the user>,\n        "groupId": <group id of the user>,\n        "eta": <time left>,\n        "status": <job status (completed, killed, failed, etc.)>,\n        "jobQueue": [\n            {\n                "jobQueueId": <job queue id>,\n                "jobQueueType": <job queue type (generally agent name)>,\n                "startTime": <job queue start time>,\n                "endTime": <job queue end time>,\n                "status": <job queue completion statu>,\n                "itemsProcessed": <number of items processed>,\n                "log": <location of log file if exists>,\n                "dependencies": <Array: list of dependent job queue ids>,\n                "itemsPerSec": <number of items processed per second>,\n                "canDoActions": <job can accept new actions like pause and cancel>,\n                "isInProgress": <checks if the job queue is still in progress>,\n                "isReady": <is the job ready>,\n                "download": {\n                    "text": <text for download link>,\n                    "link": <link to download the report\n                }\n            }\n        ]\n    }\n]\n'})}),"\n",(0,i.jsx)(s.p,{children:"This structure provides a lot more information about the job, and also provides information about the child jobs being executed, and what is the status of each child job. Attaching a screenshot of the response below."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"newJobs",src:n(20210).A+"",width:"690",height:"783"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The same structure is used for the ",(0,i.jsx)(s.code,{children:"/jobs/{id}"})," and ",(0,i.jsx)(s.code,{children:"/jobs/all"})," endpoints."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The status returned by the endpoints now depend solely on the status of the child jobs, and not all the jobs related to the upload."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Uplink PR ",(0,i.jsx)(s.a,{href:"https://github.com/fossology/fossology/pull/2781",children:"feat(api): New endpoints to get/delete/restore/update scancode copyright, email, author, url findings"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Worked on documenting some improvements in the REST API implementation."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);