"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[35711],{3960:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"2025/microservices-infrastructure/updates/2025-08-04","title":"Week 9","description":"\x3c!--","source":"@site/docs/2025/microservices-infrastructure/updates/2025-08-04.md","sourceDirName":"2025/microservices-infrastructure/updates","slug":"/2025/microservices-infrastructure/updates/2025-08-04","permalink":"/gsoc/docs/2025/microservices-infrastructure/updates/2025-08-04","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2025/microservices-infrastructure/updates/2025-08-04.md","tags":[{"inline":true,"label":"gsoc25","permalink":"/gsoc/docs/tags/gsoc-25"},{"inline":true,"label":"cmake","permalink":"/gsoc/docs/tags/cmake"},{"inline":true,"label":"infrastructure","permalink":"/gsoc/docs/tags/infrastructure"},{"inline":true,"label":"devops","permalink":"/gsoc/docs/tags/devops"}],"version":"current","frontMatter":{"title":"Week 9","author":"Muhammad Salman","author_url":"https://github.com/SalmanDeveloperz","tags":["gsoc25","cmake","infrastructure","devops"]},"sidebar":"2025","previous":{"title":"Week 8","permalink":"/gsoc/docs/2025/microservices-infrastructure/updates/2025-07-28"},"next":{"title":"Week 10","permalink":"/gsoc/docs/2025/microservices-infrastructure/updates/2025-08-11"}}');var t=s(74848),r=s(28453);const a={title:"Week 9",author:"Muhammad Salman",author_url:"https://github.com/SalmanDeveloperz",tags:["gsoc25","cmake","infrastructure","devops"]},l="Week 9",c={},d=[{value:"Database Column Fixes",id:"database-column-fixes",level:2},{value:"Scheduler Agent &amp; Dependencies",id:"scheduler-agent--dependencies",level:2},{value:"Meeting 1:",id:"meeting-1",level:2},{value:"Attendees:",id:"attendees",level:3},{value:"Scheduler and Agent Tracking:",id:"scheduler-and-agent-tracking",level:3},{value:"Focus on Getting Curl Running First:",id:"focus-on-getting-curl-running-first",level:3},{value:"Service Issues:",id:"service-issues",level:3},{value:"Binary vs. Services Approach:",id:"binary-vs-services-approach",level:3},{value:"Dockerfile Updates:",id:"dockerfile-updates",level:3},{value:"Meeting 2:",id:"meeting-2",level:2},{value:"What\u2019s Next for Week 10",id:"whats-next-for-week-10",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"week-9",children:"Week 9"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"(July 29, 2025 \u2013 August 04, 2025)"})}),"\n",(0,t.jsx)(n.h2,{id:"database-column-fixes",children:"Database Column Fixes"}),"\n",(0,t.jsxs)(n.p,{children:["Earlier, the infrastructure was causing issues on running it locally at ",(0,t.jsx)(n.a,{href:"http://192.168.49.2:32035/",children:"http://192.168.49.2:32035/"})," showing errors.",(0,t.jsx)(n.img,{alt:"Database missing Column Issues",src:s(12433).A+"",width:"1743",height:"979"})]}),"\n",(0,t.jsx)(n.p,{children:"I focused on resolving these missing database columns to make it running. I worked on adding some missing columns that were critical for the Web Agent to function correctly. After making these fixes, I also rebuilt the container images with the latest changes to keep everything up to date.\nThe missing columns are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"create_sysconfig.sql"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"create_uploadtree.sql"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"populate_sysconfig.sql"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"additional_tables.sql"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"create_additional_tables.sql"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"scheduler-agent--dependencies",children:"Scheduler Agent & Dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["Our main focus is currently on the Scheduler Agent, which plays a key role in coordinating other agents like ",(0,t.jsx)(n.code,{children:"Ojo"})," and ",(0,t.jsx)(n.code,{children:"Nomos"}),". In our weekly call, we discussed ways to strengthen its integration with these dependent agents. The scheduler tracks available agents, and for now, we\u2019ve decided to continue with the ",(0,t.jsx)(n.strong,{children:"curl-based"})," approach, where it pings the master node to check agent status."]}),"\n",(0,t.jsx)(n.h2,{id:"meeting-1",children:"Meeting 1:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"(July 30, 2025)"})}),"\n",(0,t.jsx)(n.h3,{id:"attendees",children:"Attendees:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal M MD"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/gmishx",children:"Gaurav"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/SalmanDeveloperz",children:"Muhammad Salman"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"scheduler-and-agent-tracking",children:"Scheduler and Agent Tracking:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The scheduler\u2019s role is to keep track of which agents are available."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["We discussed replacing the current ",(0,t.jsx)(n.strong,{children:"curl-based"})," ping to the master node with a shared resource approach (shared volume)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Curl approach \u2192 supports dynamic reloading (scheduler detects automatically)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Shared volume approach \u2192 requires manual or controller-based reloads."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Final agreement: for now, continue with ",(0,t.jsx)(n.strong,{children:"curl"})," since it\u2019s working, then later explore shared volume."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"focus-on-getting-curl-running-first",children:"Focus on Getting Curl Running First:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal"})," asked whether we should continue making ",(0,t.jsx)(n.strong,{children:"curl-based"})," scheduling work. ",(0,t.jsx)(n.a,{href:"https://github.com/gmishx",children:"Gaurav"})," suggested to first get it into a running state with ",(0,t.jsx)(n.strong,{children:"curl"}),". Once stable, we can think about alternatives."]}),"\n",(0,t.jsx)(n.h3,{id:"service-issues",children:"Service Issues:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal"})," pointed out a problem where installing certain dependencies starts services automatically."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"We discussed how this affects the setup, especially with PostgreSQL and other services."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"binary-vs-services-approach",children:"Binary vs. Services Approach:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"I suggested compiling agents as standalone binaries instead of depending on PostgreSQL inside the container."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"This would remove service requirements from each Dockerfile but needs significant rework."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["We also noted and understand by help of ",(0,t.jsx)(n.a,{href:"https://github.com/gmishx",children:"Gaurav"})," how environment variables and entrypoint scripts currently generate config files for agents."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dockerfile-updates",children:"Dockerfile Updates:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal"})," asked me to write a cleaner, optimal and updated ",(0,t.jsx)(n.strong,{children:"Dockerfile.ojo"})," , so he can tested on his end."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["I worked on ",(0,t.jsx)(n.strong,{children:"Dockerfile.ojo"})," and sent updated one after testing that on my end and fully compatible with the current ",(0,t.jsx)(n.strong,{children:"curl-based"})," scheduler setup to ",(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal"})," for testing."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"meeting-2",children:"Meeting 2:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"(July 24, 2025)"})}),"\n",(0,t.jsxs)(n.p,{children:["In the community call, I explained about fixing the database issues, mainly adding the missing columns needed for the Web agent. I also rebuilt the images with these changes. Right now, our main blocker is still the ",(0,t.jsx)(n.strong,{children:"scheduler"})," agent and dependent agents like ",(0,t.jsx)(n.strong,{children:"ojo"})," and ",(0,t.jsx)(n.strong,{children:"nomos"})," and some other. We also discussed keeping ",(0,t.jsx)(n.strong,{children:"curl-based"})," checks for the agents\u2019 status, and maybe simplifying the setup later, like using a standalone binary instead of relying on PostgreSQL inside the containers."]}),"\n",(0,t.jsx)(n.h2,{id:"whats-next-for-week-10",children:"What\u2019s Next for Week 10"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Get feedback of ",(0,t.jsx)(n.strong,{children:"Dockerfile.ojo"})," which I sent to mentor for testing with ",(0,t.jsx)(n.strong,{children:"curl-based"})," setup."]}),"\n",(0,t.jsx)(n.li,{children:"Fix the scheduler pod\u2019s database connectivity"}),"\n",(0,t.jsx)(n.li,{children:"Connect with mentors for planning final phase of work"}),"\n",(0,t.jsx)(n.li,{children:"Test all pods, agents and the UI in Minikube to confirm everything\u2019s rock-solid."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},12433:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/databaseColumnIssues-982cb7e8f017d8e48433133641abd8f6.png"},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);