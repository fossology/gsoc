"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[21563],{23320:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"2025/oss-review-toolkit/updates/2025-06-14","title":"Week 2","description":"\x3c!--","source":"@site/docs/2025/oss-review-toolkit/updates/2025-06-14.md","sourceDirName":"2025/oss-review-toolkit/updates","slug":"/2025/oss-review-toolkit/updates/2025-06-14","permalink":"/gsoc/docs/2025/oss-review-toolkit/updates/2025-06-14","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2025/oss-review-toolkit/updates/2025-06-14.md","tags":[],"version":"current","frontMatter":{"title":"Week 2","author":"Prakash Mishra"},"sidebar":"2025","previous":{"title":"Week 1","permalink":"/gsoc/docs/2025/oss-review-toolkit/updates/2025-06-07"},"next":{"title":"Week 3","permalink":"/gsoc/docs/2025/oss-review-toolkit/updates/2025-06-21"}}');var s=t(74848),o=t(28453);const r={title:"Week 2",author:"Prakash Mishra"},l="Week 02 Meetings and Activities",a={},d=[{value:"Integration of ORT with FOSSology Sync Meeting 2",id:"integration-of-ort-with-fossology-sync-meeting-2",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Discussion",id:"discussion",level:3},{value:"Progress",id:"progress",level:3},{value:"Next Steps",id:"next-steps",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"week-02-meetings-and-activities",children:"Week 02 Meetings and Activities"})}),"\n",(0,s.jsx)(n.h2,{id:"integration-of-ort-with-fossology-sync-meeting-2",children:"Integration of ORT with FOSSology Sync Meeting 2"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"(June 9, 2025)"})}),"\n",(0,s.jsx)(n.h3,{id:"attendees",children:"Attendees"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Prakash-Mishra-9ghz",children:"Prakash Mishra"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Kaushl2208",children:"Kaushlendra Pratap"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"discussion",children:"Discussion"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Participated in the second weekly sync meeting with mentor."}),"\n",(0,s.jsx)(n.li,{children:"Shared updates on my interaction with the ORT community and the guidance I received around integrating external scanners."}),"\n",(0,s.jsx)(n.li,{children:"Brought up a key question about how Nomos works as a standalone tool and whether it can be invoked directly."}),"\n",(0,s.jsx)(n.li,{children:"Mentor pointed me to the right resources for understanding Nomos as a standalone tool \u2014 including how to build it, use its flags, and interpret its output."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"progress",children:"Progress"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Successfully built Nomos as a standalone tool on my local system."}),"\n",(0,s.jsx)(n.li,{children:"Tested Nomos independently on sample files to understand its CLI interface and license detection capabilities."}),"\n",(0,s.jsxs)(n.li,{children:["Ran Nomos with different flags to evaluate its functionality and output formats:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-J"}),": Produces output in ",(0,s.jsx)(n.strong,{children:"JSON"}),", ideal for structured parsing."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-S"}),": Outputs highlighting information in ",(0,s.jsx)(n.strong,{children:"plain text"}),", showing the locations of detected licenses and keywords within files \u2014 including details like the position (at), length, and index of each match"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-l"}),": Ensures full file paths are included in the output."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-c"})," / ",(0,s.jsx)(n.code,{children:"-d"}),": Used for specifying config and scan directories respectively."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"This hands-on testing gave me a clear idea of how to invoke Nomos programmatically and parse its results for integration."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Begin creating the initial skeleton or wrapper code to invoke Nomos from within the ORT scanning pipeline."}),"\n",(0,s.jsx)(n.li,{children:"Continue referring to existing ORT scanner plugin implementations for structure and integration best practices."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);