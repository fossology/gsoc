"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[20482],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>h});var t=s(96540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}},82595:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>h,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"2022/atarashi/updates/2022-07-11","title":"Week 5","description":"\x3c!--","source":"@site/docs/2022/atarashi/updates/2022-07-11.md","sourceDirName":"2022/atarashi/updates","slug":"/2022/atarashi/updates/2022-07-11","permalink":"/gsoc/docs/2022/atarashi/updates/2022-07-11","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2022/atarashi/updates/2022-07-11.md","tags":[{"inline":true,"label":"gsoc22","permalink":"/gsoc/docs/tags/gsoc-22"},{"inline":true,"label":"atarashi","permalink":"/gsoc/docs/tags/atarashi"}],"version":"current","frontMatter":{"title":"Week 5","author":"Sushant Kumar","author_url":"https://github.com/its-sushant","author_image_url":"https://avatars.githubusercontent.com/u/76658675?v=4","tags":["gsoc22","atarashi"]},"sidebar":"2022","previous":{"title":"Week 4","permalink":"/gsoc/docs/2022/atarashi/updates/2022-07-04"},"next":{"title":"Week 6","permalink":"/gsoc/docs/2022/atarashi/updates/2022-07-19"}}');var i=s(74848),a=s(28453);const r={title:"Week 5",author:"Sushant Kumar",author_url:"https://github.com/its-sushant",author_image_url:"https://avatars.githubusercontent.com/u/76658675?v=4",tags:["gsoc22","atarashi"]},h=void 0,c={},o=[{value:"Meeting 6",id:"meeting-6",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Discussions",id:"discussions",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"meeting-6",children:"Meeting 6"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"(July 14th, 2022)"})}),"\n",(0,i.jsx)(n.p,{children:"GSOC 2022 weekly update"}),"\n",(0,i.jsx)(n.h3,{id:"attendees",children:"Attendees"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal M MD"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/hastagAB",children:"Ayush Bhardwaj"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/Kaushl2208",children:"Kaushlendra Pratap"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/vasudevmaduri",children:"Vasudev Maduri"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/Shruti3004",children:"Shruti Agarwal"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/its-sushant",children:"Sushant Kumar"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/fwhdzh",children:"Feng Wenhan"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/rohitpandey49",children:"Rohit Pandey"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/Pendyala-thanvi",children:"Thanvi Lahari Pendyala"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/krishna9304",children:"Krishna Mahato"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/soham4abc",children:"Soham Banerjee"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"discussions",children:"Discussions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Made changes suggested by the mentors on the ",(0,i.jsx)(n.a,{href:"https://github.com/fossology/Minerva-Dataset-Generation/pull/5",children:"pr"}),"\ncreted on ",(0,i.jsx)(n.a,{href:"https://github.com/fossology/Minerva-Dataset-Generation",children:"Minerva"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Implemented agent on ",(0,i.jsx)(n.a,{href:"https://github.com/fossology/atarashi",children:"atarashi"})," for\n",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Okapi_BM25",children:"okapibm25"})," and got the accuracy score of ",(0,i.jsx)(n.strong,{children:"62%"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"          Total files scanned = 100\n          Successfully matched = 62\n\n          ++++++++++++++++++ Result ++++++++++++++++++\n          ++++++++++++++++++++++++++++++++++++++++++++\n          ---\x3e Total time elapsed: 11.67 Seconds  <---\n          ---\x3e Accuracy: 62.0%                     <---\n          ++++++++++++++++++++++++++++++++++++++++++++\n          ++++++++++++++++++++++++++++++++++++++++++++\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"And raised the pr for the same."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"https://github.com/fossology/atarashi/pull/101",children:["feat(agent)",":Add"," okapibm25 agent"]})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:' def scan(self, filePath):\n      \'\'\'\n      Read the content of filename, extract the comments and preprocess them.\n      Find the license of the preprocessed file.\n      :param filePath: Path of the file to scan\n      :return: Returns the license\'s short name with highest similarity scores\n      \'\'\'\n      processedData = super().loadFile(filePath)\n\n      with open(filePath) as file:\n          raw_data = file.read()\n      spdx_identifers = spdx_identifer(raw_data,\n                                       self.licenseList[\'shortname\'])\n\n      match = []\n      if spdx_identifers:\n          match.extend(spdx_identifers)\n      else:\n          tokenize_corpus = []\n          corpus_identifier = []\n          for idx in range(len(self.licenseList)):\n              tok = self.licenseList.iloc[idx][\'processed_text\'].split(" ")\n              tokenize_corpus.append(tok)\n              tok_identifier = self.licenseList.iloc[idx][\'shortname\']\n              corpus_identifier.append(tok_identifier)\n\n          bm25 = BM25Okapi(tokenize_corpus)\n          doc_scores = bm25.get_scores(processedData.split(" "))\n          indices = np.argsort(doc_scores)[::-1][:10]\n\n          for index in indices:\n              match.append({\n                  "shortname": str(corpus_identifier[index]),\n                  "sim_score": doc_scores[index],\n                  "sim_type": "bm25",\n                  "description": ""\n              })\n\n      return match\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["In above given code it can be seen that I have used ",(0,i.jsx)(n.a,{href:"https://pypi.org/project/rank-bm25/",children:"bm25"})," to transform\nprocessed text and then the similarity score has been calculated."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"conclusion-and-further-plans",children:"Conclusion and Further Plans"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Will make the changes according to further suggestion."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);