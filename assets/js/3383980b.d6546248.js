"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[75143],{28453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>a});var n=i(96540);const t={},o=n.createContext(t);function r(e){const s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(o.Provider,{value:s},e.children)}},37942:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"2022/ui/updates/krishna/2022-08-07","title":"Week 8","description":"\x3c!--","source":"@site/docs/2022/ui/updates/krishna/2022-08-07.md","sourceDirName":"2022/ui/updates/krishna","slug":"/2022/ui/updates/krishna/2022-08-07","permalink":"/gsoc/docs/2022/ui/updates/krishna/2022-08-07","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2022/ui/updates/krishna/2022-08-07.md","tags":[{"inline":true,"label":"gsoc22","permalink":"/gsoc/docs/tags/gsoc-22"},{"inline":true,"label":"react","permalink":"/gsoc/docs/tags/react"},{"inline":true,"label":"Week 8","permalink":"/gsoc/docs/tags/week-8"}],"version":"current","frontMatter":{"title":"Week 8","author":"Krishna Mahato","author_url":"https://github.com/krishna9304","last_updated":"7th August, 2022","author_image_url":"https://avatars.githubusercontent.com/u/71918441?v=4","tags":["gsoc22","react","Week 8"]},"sidebar":"2022","previous":{"title":"Week 7","permalink":"/gsoc/docs/2022/ui/updates/krishna/2022-07-31"},"next":{"title":"Week 9","permalink":"/gsoc/docs/2022/ui/updates/krishna/2022-08-14"}}');var t=i(74848),o=i(28453);const r={title:"Week 8",author:"Krishna Mahato",author_url:"https://github.com/krishna9304",last_updated:"7th August, 2022",author_image_url:"https://avatars.githubusercontent.com/u/71918441?v=4",tags:["gsoc22","react","Week 8"]},a=void 0,l={},d=[{value:"Goals for the week",id:"goals-for-the-week",level:2},{value:"REST API Implemented -",id:"rest-api-implemented--",level:2},{value:"<code>uploadPermssions</code> :",id:"uploadpermssions-",level:3},{value:"PR Link : feat(api): PUT api to Set permissions for a upload and GET API to fetch respective permissions of groups #2275",id:"pr-link--featapi-put-api-to-set-permissions-for-a-upload-and-get-api-to-fetch-respective-permissions-of-groups-2275",level:3},{value:"Testing <code>/uploads/{id}/permissions</code>",id:"testing-uploadsidpermissions",level:2},{value:"UI Implementation of the upload permissions page",id:"ui-implementation-of-the-upload-permissions-page",level:2},{value:"Conclusions and further plans",id:"conclusions-and-further-plans",level:2}];function h(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"goals-for-the-week",children:"Goals for the week"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Sl. No."}),(0,t.jsx)(s.th,{children:"Initial Goals"}),(0,t.jsx)(s.th,{children:"Completed"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"1."}),(0,t.jsx)(s.td,{children:"Solve requested changes on existing PRs"}),(0,t.jsx)(s.td,{children:"Done"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"2."}),(0,t.jsx)(s.td,{children:"Finish the implementation of REST API for modifying upload Permssions"}),(0,t.jsx)(s.td,{children:"Done"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"rest-api-implemented--",children:"REST API Implemented -"}),"\n",(0,t.jsxs)(s.p,{children:["After designing the API in the previous weaek, the design was approved by ",(0,t.jsx)(s.strong,{children:"Gaurav"})," Sir and requested some final changes. So, following the API design I implemented the ",(0,t.jsx)(s.code,{children:"PUT /uploads/{id}/permissions"})," api for modifying the upload permissions via REST API."]}),"\n",(0,t.jsxs)(s.h3,{id:"uploadpermssions-",children:[(0,t.jsx)(s.code,{children:"uploadPermssions"})," :"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The API implementation of the ",(0,t.jsx)(s.code,{children:"/uploads/{id}/permissions"})," PUT route to modify user Details is done."]}),"\n",(0,t.jsxs)(s.li,{children:["This task included","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Creating a new PUT route in the ",(0,t.jsx)(s.code,{children:"index.php"})," file inside ",(0,t.jsx)(s.code,{children:"www/ui/api"})," directory."]}),"\n",(0,t.jsxs)(s.li,{children:["Adding a new method ",(0,t.jsx)(s.code,{children:"setUploadPermissions"})," in the ",(0,t.jsx)(s.code,{children:"UploadController"}),"class."]}),"\n",(0,t.jsxs)(s.li,{children:["Trying to re-use the methods that are already used in the ",(0,t.jsx)(s.code,{children:"upload_permissions"})," plugin."]}),"\n",(0,t.jsxs)(s.li,{children:["Testing the API via any API platform like ",(0,t.jsx)(s.strong,{children:"postman"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"pr-link--featapi-put-api-to-set-permissions-for-a-upload-and-get-api-to-fetch-respective-permissions-of-groups-2275",children:["PR Link : ",(0,t.jsx)(s.a,{href:"https://github.com/fossology/fossology/pull/2275",children:"feat(api): PUT api to Set permissions for a upload and GET API to fetch respective permissions of groups #2275"})]}),"\n",(0,t.jsxs)(s.h2,{id:"testing-uploadsidpermissions",children:["Testing ",(0,t.jsx)(s.code,{children:"/uploads/{id}/permissions"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Pull the changes from the above ",(0,t.jsx)(s.strong,{children:"PR"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Use any API platform like ",(0,t.jsx)(s.strong,{children:"postman"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Provide the request body as following ----\n",(0,t.jsx)(s.img,{alt:"req-body-upload-permissions",src:i(64091).A+"",width:"938",height:"246"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["You can expect a response like this\n",(0,t.jsx)(s.img,{alt:"res-upload-permissions",src:i(40585).A+"",width:"938",height:"212"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"ui-implementation-of-the-upload-permissions-page",children:"UI Implementation of the upload permissions page"}),"\n",(0,t.jsx)(s.p,{children:"When I started examining the UI behaviour of the upload permssions page, I realised that there is a requirement of an API that should return all the groups with their respective permissions for a given upload in order to create a tabular view in the UI."}),"\n",(0,t.jsx)(s.h2,{id:"conclusions-and-further-plans",children:"Conclusions and further plans"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"This PR is currently in review and if any changes are requested, I'll be solving them in the coming week."}),"\n",(0,t.jsx)(s.li,{children:"Implement and design the API that will return the groups with their respective permissions for a given upload ID."}),"\n",(0,t.jsx)(s.li,{children:"Implementing the react UI for the upload permissions page."}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},40585:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/uploadPermRes-f0c696445372eedcea737c93226d6e96.png"},64091:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/uploadPermReq-2c3ae44d992bda6ba2f6b8ca280e6b83.png"}}]);