"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[12054],{17496:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"2024/license-detection/updates/2024-05-30","title":"Week 1","description":"\x3c!--","source":"@site/docs/2024/license-detection/updates/2024-05-30.md","sourceDirName":"2024/license-detection/updates","slug":"/2024/license-detection/updates/2024-05-30","permalink":"/gsoc/docs/2024/license-detection/updates/2024-05-30","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2024/license-detection/updates/2024-05-30.md","tags":[],"version":"current","frontMatter":{"title":"Week 1","author":"Abdelrahman Jamal"},"sidebar":"2024","previous":{"title":"Introduction","permalink":"/gsoc/docs/2024/license-detection/"},"next":{"title":"Week 2","permalink":"/gsoc/docs/2024/license-detection/updates/2024-06-06"}}');var i=t(74848),a=t(28453);const r={title:"Week 1",author:"Abdelrahman Jamal"},o="Meeting 1",l={},c=[{value:"Attendees:",id:"attendees",level:2},{value:"Discussion:",id:"discussion",level:2},{value:"LLM Comparison Codebase",id:"llm-comparison-codebase",level:3},{value:"Initial PyTorch Dataset",id:"initial-pytorch-dataset",level:3},{value:"Codebase Structure",id:"codebase-structure",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Refined Data Input",id:"refined-data-input",level:3},{value:"Codebase Enhancements",id:"codebase-enhancements",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"meeting-1",children:"Meeting 1"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"(May 30,2024)"})}),"\n",(0,i.jsx)(n.h2,{id:"attendees",children:"Attendees:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/Kaushl2208",children:"Kaushlendra Pratap"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/ag4ums",children:"Anupam Ghosh"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal M MD"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/hastagAB",children:"Ayush Bhardwaj"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal Kumar"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"discussion",children:"Discussion:"}),"\n",(0,i.jsx)(n.h3,{id:"llm-comparison-codebase",children:"LLM Comparison Codebase"}),"\n",(0,i.jsx)(n.p,{children:"I presented a preliminary codebase designed to interface with multiple LLM APIs (Groq, Nvidia, Together AI) for comparison purposes. This allows us to assess the performance of different models on our license identification task."}),"\n",(0,i.jsx)(n.h3,{id:"initial-pytorch-dataset",children:"Initial PyTorch Dataset"}),"\n",(0,i.jsx)(n.p,{children:"I  prepared a small PyTorch dataset using the Nomos agent to evaluate the LLMs."}),"\n",(0,i.jsx)(n.h3,{id:"codebase-structure",children:"Codebase Structure"}),"\n",(0,i.jsx)(n.p,{children:"The project repository is structured as follows:\nGSOC24"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GSOC24\n\u251c\u2500\u2500 helpers\n\u2502   \u251c\u2500\u2500 functions\n\u2502   \u251c\u2500\u2500 llm_client\n\u2502   \u251c\u2500\u2500 models\n\u2502   \u2514\u2500\u2500 parsers\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"functions"}),": Contains helper functions for sampling, file operations, etc."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"llm_client"}),":  Central class for interacting with LLMs, including API initialization, logging, and retry mechanisms. This week focused on laying the groundwork for efficient, automated requests to the APIs."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"models"}),": Enum class for supported LLM models (LLama 8b, Mistral 7b, Gemma 1 7b, Phi_3 mini/small)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"parsers"}),": (Placeholder for future LLM output parsing functions)"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.h3,{id:"refined-data-input",children:"Refined Data Input"}),"\n",(0,i.jsx)(n.p,{children:"Instead of feeding the entire file comments to the LLM, we will use Nirjas to extract and provide only the comments relevant to license information. This should improve accuracy and reduce computational costs.\nEnhanced Dataset: We plan to create a more diverse dataset using Linux code, as this will better represent the variety of license structures and wording encountered in real-world projects."}),"\n",(0,i.jsx)(n.h3,{id:"codebase-enhancements",children:"Codebase Enhancements"}),"\n",(0,i.jsxs)(n.p,{children:["Finalize the ",(0,i.jsx)(n.code,{children:"llm_client"})," functionality to enable efficient, automated requests across the entire dataset."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);