"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[45972],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var s=i(96540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}},99302:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"2021/microservice/updates/2021-06-07","title":"Week 1","description":"\x3c!--","source":"@site/docs/2021/microservice/updates/2021-06-07.md","sourceDirName":"2021/microservice/updates","slug":"/2021/microservice/updates/2021-06-07","permalink":"/gsoc/docs/2021/microservice/updates/2021-06-07","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2021/microservice/updates/2021-06-07.md","tags":[],"version":"current","frontMatter":{"title":"Week 1","author":"Omar AbdelSamea"},"sidebar":"2021","previous":{"title":"Introduction","permalink":"/gsoc/docs/2021/microservice/"},"next":{"title":"Week 2","permalink":"/gsoc/docs/2021/microservice/updates/2021-06-15"}}');var t=i(74848),r=i(28453);const d={title:"Week 1",author:"Omar AbdelSamea"},o="Coding Week 1",c={},l=[{value:"Meeting 0",id:"meeting-0",level:2},{value:"Organizer",id:"organizer",level:3},{value:"Attendees",id:"attendees",level:3},{value:"Outcomes",id:"outcomes",level:3},{value:"Meeting 1",id:"meeting-1",level:2},{value:"Organizer",id:"organizer-1",level:3},{value:"Attendees",id:"attendees-1",level:3},{value:"Outcomes",id:"outcomes-1",level:3},{value:"Creating network using docker-compose",id:"creating-network-using-docker-compose",level:2},{value:"Issues",id:"issues",level:3},{value:"Solution",id:"solution",level:4},{value:"End of the week results",id:"end-of-the-week-results",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"coding-week-1",children:"Coding Week 1"})}),"\n",(0,t.jsx)(n.h2,{id:"meeting-0",children:"Meeting 0"}),"\n",(0,t.jsx)(n.h3,{id:"organizer",children:"Organizer"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gaurav Mishra"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"attendees",children:"Attendees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Anupam Ghosh"}),"\n",(0,t.jsx)(n.li,{children:"Ayush Bharadwaj"}),"\n",(0,t.jsx)(n.li,{children:"Vasudev Maduri"}),"\n",(0,t.jsx)(n.li,{children:"Kaushlendra Singh"}),"\n",(0,t.jsx)(n.li,{children:"Shreya Pratap"}),"\n",(0,t.jsx)(n.li,{children:"Omar AbdelSamea"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"outcomes",children:"Outcomes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gaurav illustrated how scheduler starts agents and the communication between them."}),"\n",(0,t.jsx)(n.li,{children:"Discussed how the db container should be implemented and the process of installing FOSSology schema inside the container."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"meeting-1",children:"Meeting 1"}),"\n",(0,t.jsx)(n.h3,{id:"organizer-1",children:"Organizer"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Gaurav Mishra"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"attendees-1",children:"Attendees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Anupam Ghosh"}),"\n",(0,t.jsx)(n.li,{children:"Ayush Bharadwaj"}),"\n",(0,t.jsx)(n.li,{children:"Vasudev Maduri"}),"\n",(0,t.jsx)(n.li,{children:"Kaushlendra Singh"}),"\n",(0,t.jsx)(n.li,{children:"Shreya Pratap"}),"\n",(0,t.jsx)(n.li,{children:"Omar AbdelSamea"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"outcomes-1",children:"Outcomes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Discussed the issues while trying to setup Docker-compse."}),"\n",(0,t.jsx)(n.li,{children:"Discussed a possible implementation of communication between the scheduler and agents."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"creating-network-using-docker-compose",children:"Creating network using docker-compose"}),"\n",(0,t.jsx)(n.h3,{id:"issues",children:"Issues"}),"\n",(0,t.jsxs)(n.p,{children:["1- While trying to connect the scheduler container with db container using docker-compose. the ",(0,t.jsx)(n.code,{children:"docker-entrypoint"})," have ",(0,t.jsx)(n.code,{children:"fo-postinstall"})," inside it to install FOSSology db schema inside the db container, but ",(0,t.jsx)(n.code,{children:"core-schema.dat"})," wasn't found inside the scheduler container."]}),"\n",(0,t.jsx)(n.h4,{id:"solution",children:"Solution"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"core-schema.dat"})," is found inside ",(0,t.jsx)(n.code,{children:"fossology-web.deb"})," hence this package is installed inside the scheduler container. Better solution will be provided in the future as the required file ",(0,t.jsx)(n.code,{children:"core-schema.dat"})," could be copied to the container in the Dockerfile."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["2- nomos container exits immediately and it returns ",(0,t.jsx)(n.strong,{children:"status code 0"}),". ",(0,t.jsx)(n.code,{children:"exec /usr/sbin/sshd -D"})," and ",(0,t.jsx)(n.code,{children:"exec /bin/bash"})," both added to the ",(0,t.jsx)(n.code,{children:"docker-entrypoint"})," to keep the container running but it didn't work."]}),"\n",(0,t.jsx)(n.h2,{id:"end-of-the-week-results",children:"End of the week results"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Created a separate container for PostgreSQL database"}),"\n",(0,t.jsxs)(n.li,{children:["Solved the issues between the scheduler and database, checked all missing dependencies for correct starting of all containers and configured the ",(0,t.jsx)(n.code,{children:"docker-entrypoint.sh"})," to work with all the separate containers"]}),"\n",(0,t.jsx)(n.li,{children:"Started a network using docker-compose with the new Dockerfiles between scheduler, UI and database."}),"\n",(0,t.jsx)(n.li,{children:"Started the initial implemntation of K8s cluster."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);