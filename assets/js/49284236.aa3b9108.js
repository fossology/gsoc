"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[83985],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>r});var t=n(96540);const i={},l=t.createContext(i);function o(e){const s=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(l.Provider,{value:s},e.children)}},99659:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"2021/buildsystem/updates/2021-08-06","title":"Week 9","description":"\x3c!--","source":"@site/docs/2021/buildsystem/updates/2021-08-06.md","sourceDirName":"2021/buildsystem/updates","slug":"/2021/buildsystem/updates/2021-08-06","permalink":"/gsoc/docs/2021/buildsystem/updates/2021-08-06","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2021/buildsystem/updates/2021-08-06.md","tags":[{"inline":true,"label":"gsoc21","permalink":"/gsoc/docs/tags/gsoc-21"},{"inline":true,"label":"buildsystem","permalink":"/gsoc/docs/tags/buildsystem"},{"inline":true,"label":"ci/cd","permalink":"/gsoc/docs/tags/ci-cd"},{"inline":true,"label":"cmake","permalink":"/gsoc/docs/tags/cmake"}],"version":"current","frontMatter":{"title":"Week 9","author":"Avinal Kumar","author_url":"https://github.com/avinal","author_image_url":"https://avatars.githubusercontent.com/u/74113200?v=4","tags":["gsoc21","buildsystem","ci/cd","cmake"]},"sidebar":"2021","previous":{"title":"Week 8","permalink":"/gsoc/docs/2021/buildsystem/updates/2021-07-30"},"next":{"title":"Week 10","permalink":"/gsoc/docs/2021/buildsystem/updates/2021-08-13"}}');var i=n(74848),l=n(28453);const o={title:"Week 9",author:"Avinal Kumar",author_url:"https://github.com/avinal",author_image_url:"https://avatars.githubusercontent.com/u/74113200?v=4",tags:["gsoc21","buildsystem","ci/cd","cmake"]},r=void 0,a={},c=[{value:"Meeting 13",id:"meeting-13",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Week 9 Progress",id:"week-9-progress",level:3},{value:"Discussions",id:"discussions",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",level:3}];function d(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"meeting-13",children:"Meeting 13"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"(August 6th, 2021)"})}),"\n",(0,i.jsx)(s.h3,{id:"attendees",children:"Attendees"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra "})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/ag4ums",children:"Anupam Ghosh "})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/itssingh",children:"Sarita Singh "})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/avinal",children:"Avinal Kumar "})}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"week-9-progress",children:"Week 9 Progress"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Initial CMake testing configuration added."}),"\n",(0,i.jsx)(s.li,{children:"Few tests working, e.g copyright, nomos"}),"\n",(0,i.jsx)(s.li,{children:"Improved packaging configurations"}),"\n",(0,i.jsxs)(s.li,{children:["To test the current progress, follow the instructions ",(0,i.jsx)(s.a,{href:"https://github.com/avinal/FOSSologywiki#test-the-new-system-only-gcc-with-make-and-ninja-tested-for-now",children:"here"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"discussions",children:"Discussions"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Is this a necessity that tests must be run as the fossy user? Because when I run tests as me they as for permissions. But proceeds as the fossy user."})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"No this is not required and this should not happen. They run under fossy as they sometimes require writing into /srv/fossology. But if they can run under other users that is an enhancement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"I am getting a lot of install issues in C/C++ agent tests?"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"    Start 3: delagent_unit_test\n    \n    3: Test command: /home/avinal/Documents/my_git/fossology/build/src/delagent/agent_tests/test_delagent\n    3: Test timeout computed to be: 10000000\n    3: install: cannot stat '/home/avinal/Documents/my_git/fossology/build/src/delagent/agent_tests/..//../../install/defconf/Db.conf': No such file or directory\n    3: install: cannot stat '/home/avinal/Documents/my_git/fossology/build/src/delagent/agent_tests/..//VERSION': No such file or directory\n    3: sh: 1: ../../../testing/db/createTestDB.php: not found\n    3: Failed to run ../../../testing/db/createTestDB.php -c /home/avinal/Documents/my_git/fossologbuild/src/delagent/agent_tests/testconf -e, exit code is:127 .\n    3/8 Test #3: delagent_unit_test ...............***Failed    0.02 sec\n"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Not sure about the reason. I was suspecting Makefile but since they are gone now, I think PHP files are calling some shell commands causing this."}),"\n"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Suggestions/Changes from Gaurav for fixing tests."})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For clib-tests, it needs to be called from PHP file (via PHPUnit) as it requires setting up a dummy repo. Check the ",(0,i.jsx)(s.code,{children:"src/lib/c/test/Makefile"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For missing services.xml, the test cases include ",(0,i.jsx)(s.code,{children:"src/lib/php/common-container.php"})," which loads the file. It expects it to be in current dir. Can be solved in two ways"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Create another common-container.php just for test cases with correct paths."}),"\n",(0,i.jsx)(s.li,{children:"Edit the current file and take the help of environment variables. For example, if a test variable is exported in env, find the XML relative to it otherwise continue as normal and this variable can be exported by CMake during the test."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Scheduler tests do need ",(0,i.jsx)(s.code,{children:"fossology_testconfig"})," from Makefile.deps which set up the srv and create test configurations, DB, etc."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Another shell script can be written to do all that and call it from CMake. The PHP file called makes everything required in /tmp so not an issue."}),"\n",(0,i.jsxs)(s.li,{children:["The locations like ",(0,i.jsx)(s.code,{children:"LOG_DIR, FOSSDB_CONF"}),", etc. in CMakeLists.txt can be changed to some other values. I am guessing this is the reason you were asked for the fossy password."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["File ",(0,i.jsx)(s.code,{children:"src/copyright/agent_tests/Functional/cli_test.sh"})," needs to be edited to take paths relative to build dir. It can also be made into a .in file which is generated from CMake? So every path can easily be updated."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"For PHP agents with missing version.php issue, there is a hack possible"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Check ",(0,i.jsx)(s.a,{href:"https://www.php.net/manual/en/function.set-include-path.php",children:"https://www.php.net/manual/en/function.set-include-path.php"})]}),"\n",(0,i.jsx)(s.li,{children:"Another hack will be to use soft links for version.php in the source."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Other PHP issues like ",(0,i.jsx)(s.code,{children:"PHP Fatal error: Uncaught Error: Class 'Fossology\\Lib\\Agent\\Agent' not found"})," can only be solved by editing composer.json before doing composer install (look for autoload: psr-4 )."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["For delagent, pkgagent, mimetype issues, something can be done here: ",(0,i.jsx)(s.a,{href:"https://github.com/avinal/fossology/blob/avinal/feat/testing/src/testing/db/c/libfodbreposysconf.c#L349",children:"https://github.com/avinal/fossology/blob/avinal/feat/testing/src/testing/db/c/libfodbreposysconf.c#L349"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"conclusion-and-further-plans",children:"Conclusion and Further Plans"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Raise a pull request for all the progress till now."}),"\n",(0,i.jsx)(s.li,{children:"Refactor the test source code according to suggestions."}),"\n",(0,i.jsx)(s.li,{children:"Implement remaining testing configurations."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);