"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[836],{22504:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/125129821-4e9b9200-e100-11eb-9c5f-cc3d844968c9-9c6dacaae25f68e2244b4b062674161d.png"},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var i=n(96540);const d={},t=i.createContext(d);function r(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),i.createElement(t.Provider,{value:s},e.children)}},63093:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"2021/microservice/updates/2021-06-29","title":"Week 4","description":"\x3c!--","source":"@site/docs/2021/microservice/updates/2021-06-29.md","sourceDirName":"2021/microservice/updates","slug":"/2021/microservice/updates/2021-06-29","permalink":"/gsoc/docs/2021/microservice/updates/2021-06-29","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2021/microservice/updates/2021-06-29.md","tags":[],"version":"current","frontMatter":{"title":"Week 4","author":"Omar AbdelSamea"},"sidebar":"2021","previous":{"title":"Week 3","permalink":"/gsoc/docs/2021/microservice/updates/2021-06-22"},"next":{"title":"Week 5","permalink":"/gsoc/docs/2021/microservice/updates/2021-07-06"}}');var d=n(74848),t=n(28453);const r={title:"Week 4",author:"Omar AbdelSamea"},l="Coding Week 4",o={},c=[{value:"Meeting 0",id:"meeting-0",level:2},{value:"Organizer",id:"organizer",level:3},{value:"Attendees",id:"attendees",level:3},{value:"Outcomes",id:"outcomes",level:3},{value:"Meeting 1",id:"meeting-1",level:2},{value:"Organizer",id:"organizer-1",level:3},{value:"Attendees",id:"attendees-1",level:3},{value:"Outcomes",id:"outcomes-1",level:3},{value:"Using <code>kubectl</code> instead of SSH",id:"using-kubectl-instead-of-ssh",level:2},{value:"Using <code>kubectl</code> inside pod",id:"using-kubectl-inside-pod",level:3},{value:"Issues",id:"issues",level:3},{value:"Description",id:"description",level:4},{value:"Hot Fix",id:"hot-fix",level:4},{value:"End of the week results",id:"end-of-the-week-results",level:2},{value:"Diagrams",id:"diagrams",level:2},{value:"Agent-Scheduler meta agents folder",id:"agent-scheduler-meta-agents-folder",level:3}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"coding-week-4",children:"Coding Week 4"})}),"\n",(0,d.jsx)(s.h2,{id:"meeting-0",children:"Meeting 0"}),"\n",(0,d.jsx)(s.h3,{id:"organizer",children:"Organizer"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Gaurav Mishra"}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"attendees",children:"Attendees"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Omar AbdelSamea"}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"outcomes",children:"Outcomes"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Discussed the issue of meta-agents folder, currently, the scheduler looks for meta-agents in /etc/fossology/mods-enabled inside it's pod which doesn't contain any agent."}),"\n",(0,d.jsx)(s.li,{children:"As hot fix, Gaurav suggested implementing to mount mods-enabled folder to a PVC."}),"\n",(0,d.jsx)(s.li,{children:"To continue development until a final decision is taken from the mentors, all required agents will be copied to meta-agents folder inside the scheduler pod."}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"meeting-1",children:"Meeting 1"}),"\n",(0,d.jsx)(s.h3,{id:"organizer-1",children:"Organizer"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Gaurav Mishra"}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"attendees-1",children:"Attendees"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Ayush Bharadwaj"}),"\n",(0,d.jsx)(s.li,{children:"Klaus Gmeinwieser"}),"\n",(0,d.jsx)(s.li,{children:"Kaushlendra Singh"}),"\n",(0,d.jsx)(s.li,{children:"Shreya Pratap"}),"\n",(0,d.jsx)(s.li,{children:"Omar AbdelSamea"}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"outcomes-1",children:"Outcomes"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["Presented how communication between the scheduler and agents will be implemented using ",(0,d.jsx)(s.code,{children:"kubectl"})," exec instead of ssh."]}),"\n",(0,d.jsx)(s.li,{children:"Tested it with fixed pod name and fixed commands and showed initial good results."}),"\n"]}),"\n",(0,d.jsxs)(s.h2,{id:"using-kubectl-instead-of-ssh",children:["Using ",(0,d.jsx)(s.code,{children:"kubectl"})," instead of SSH"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["As mentioned in this ",(0,d.jsx)(s.a,{href:"https://stackoverflow.com/q/49376513",children:"thread"})," using SSH between pods is not recommended."]}),"\n"]}),"\n",(0,d.jsxs)(s.h3,{id:"using-kubectl-inside-pod",children:["Using ",(0,d.jsx)(s.code,{children:"kubectl"})," inside pod"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["To use ",(0,d.jsx)(s.code,{children:"kubectl"})," inside pod, special permissions needs to be granted fro this pod to be able to access the resources data inside the cluster. These permissions are granted using K8s ",(0,d.jsx)(s.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",children:"service account"})]}),"\n",(0,d.jsx)(s.li,{children:"Scheduler pod needs permissions so it can access pods and use exec command."}),"\n",(0,d.jsxs)(s.li,{children:["Implemented service-account for scheduler is here ",(0,d.jsx)(s.a,{href:"https://github.com/OmarAbdelSamea/fossology/blob/OmarAbdelSamea/GSoC/Microservices/k8s/service-account-scheduler.yaml",children:"https://github.com/OmarAbdelSamea/fossology/blob/OmarAbdelSamea/GSoC/Microservices/k8s/service-account-scheduler.yaml"})]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"issues",children:"Issues"}),"\n",(0,d.jsxs)(s.p,{children:["1- ",(0,d.jsx)(s.code,{children:'error: error loading config file "/root/.kube/config": open /root/.kube/config: permission denied'})]}),"\n",(0,d.jsx)(s.h4,{id:"description",children:"Description"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"this issue occurs as .kube folder is created by default inside the root home directory and fossy folder doesn't have permissions to access this folder"}),"\n"]}),"\n",(0,d.jsx)(s.h4,{id:"hot-fix",children:"Hot Fix"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"add o+rwx permissions to /root/.kube permission"}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"end-of-the-week-results",children:"End of the week results"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["Initially implemented usage of ",(0,d.jsx)(s.code,{children:"kubectl"})," instead of SSH on agent nomos with a fixed pod name and fixed command."]}),"\n",(0,d.jsxs)(s.li,{children:["Implemented multistage build for ",(0,d.jsx)(s.code,{children:"fossology:packages"})," base image bringing it down from 2.1GB to 10MB."]}),"\n",(0,d.jsxs)(s.li,{children:["Implemented service-account for scheduler to grant needed permission to run ",(0,d.jsx)(s.code,{children:"kubectl exec"}),"."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"diagrams",children:"Diagrams"}),"\n",(0,d.jsx)(s.h3,{id:"agent-scheduler-meta-agents-folder",children:"Agent-Scheduler meta agents folder"}),"\n",(0,d.jsx)(s.p,{children:(0,d.jsx)(s.img,{alt:"image",src:n(22504).A+"",width:"645",height:"481"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}}}]);