"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[32202],{5410:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"2024/license-detection/updates/2024-06-13","title":"Week 3","description":"\x3c!--","source":"@site/docs/2024/license-detection/updates/2024-06-13.md","sourceDirName":"2024/license-detection/updates","slug":"/2024/license-detection/updates/2024-06-13","permalink":"/gsoc/docs/2024/license-detection/updates/2024-06-13","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2024/license-detection/updates/2024-06-13.md","tags":[],"version":"current","frontMatter":{"title":"Week 3","author":"Abdelrahman Jamal"},"sidebar":"2024","previous":{"title":"Week 2","permalink":"/gsoc/docs/2024/license-detection/updates/2024-06-06"},"next":{"title":"Week 4","permalink":"/gsoc/docs/2024/license-detection/updates/2024-06-20"}}');var s=i(74848),a=i(28453);const l={title:"Week 3",author:"Abdelrahman Jamal"},c="Meeting 3",r={},o=[{value:"Attendees:",id:"attendees",level:2},{value:"Discussion:",id:"discussion",level:2},{value:"Semantic Search Exploration",id:"semantic-search-exploration",level:3},{value:"License Text Dataset",id:"license-text-dataset",level:3},{value:"Semantic Search Approaches",id:"semantic-search-approaches",level:3},{value:"Code Example:",id:"code-example",level:3},{value:"Output Example:",id:"output-example",level:3},{value:"Key Findings",id:"key-findings",level:3},{value:"Additional Notes",id:"additional-notes",level:3},{value:"Conclusions and Next Steps",id:"conclusions-and-next-steps",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"meeting-3",children:"Meeting 3"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"(June 13,2024)"})}),"\n",(0,s.jsx)(n.h2,{id:"attendees",children:"Attendees:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Kaushl2208",children:"Kaushlendra Pratap"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/ag4ums",children:"Anupam Ghosh"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal M MD"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/hastagAB",children:"Ayush Bhardwaj"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal Kumar"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"discussion",children:"Discussion:"}),"\n",(0,s.jsx)(n.h3,{id:"semantic-search-exploration",children:"Semantic Search Exploration"}),"\n",(0,s.jsx)(n.p,{children:"Began implementing semantic search to improve license identification accuracy. Explored various techniques:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sentence Transformers: Utilized the high-performing all-mpnet-base-v2 model."}),"\n",(0,s.jsx)(n.li,{children:"Bag-of-Words (BoW) & TF-IDF: Examined a simpler model for comparison"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"license-text-dataset",children:"License Text Dataset"}),"\n",(0,s.jsxs)(n.p,{children:["Incorporated license names and SPDX IDs from the ",(0,s.jsx)(n.a,{href:"https://github.com/spdx/license-list-data/tree/main/json",children:"SPDX GitHub repository"})," into the project. The end result is a csv file with license names, ids, and license text available for use in semantic search."]}),"\n",(0,s.jsx)(n.h3,{id:"semantic-search-approaches",children:"Semantic Search Approaches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"file-embedding"}),": Embedded all license texts together, but this proved too coarse for granular analysis."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"license-embedding"}),": Embedded each license text individually. This showed promise in identifying license-relevant lines but struggled with accurate license matching."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"line-embedding"}),": Embedded each line of each license separately, offering potential for finer-grained matching but at a higher computational cost."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-example",children:"Code Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"create_license_dataset('extras/license_information/details')\ndf = client.temp_function(pd.read_csv('extras/lamma3-8b-pytorch-main-sampled.csv'))\nfile_idx = 0\nresults = get_top_similar_license_lines(\\\n                df.loc[file_idx, 'file_comments'],\n                'extras/license_information/license_dataset.txt',\n                # model='bow',\n                top_k=5,\n                embedding_approach='license-embedding'\n            )\nresults\n)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"output-example",children:"Output Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[(40,\n  0.6339692,\n  ' File distributed under the Zero Clause BSD (0BSD) license. Copyright Contributors to the pythoncapi_compat project.',\n  'License Name: CNRI Python License'),\n (0,\n  0.5076868,\n  'Header file providing new C API functions to old Python versions.',\n  'N/A'),\n (1,\n  0.5062,\n  'SPDX-License-Identifier: 0BSD',\n  'License Name: Xdebug License v 1.03'),\n (41,\n  0.4910386,\n  ' Homepage: https://github.com/python/pythoncapi_compat',\n  'License Name: CNRI Python License'),\n (46,\n  0.47866815,\n  ' bpo-43753 added Py_Is(), Py_IsNone(), Py_IsTrue() and Py_IsFalse() to Python 3.10.0b1.',\n  'License Name: CNRI Python License')]\n"})}),"\n",(0,s.jsx)(n.p,{children:"The output is a list of tuples where each tuple contains:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"The index of the line in question"}),"\n",(0,s.jsx)(n.li,{children:"The similarity score that led to it being chosen as a top similar line"}),"\n",(0,s.jsx)(n.li,{children:"The actual text of the line"}),"\n",(0,s.jsx)(n.li,{children:"The name of the license that the line was matched to"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"key-findings",children:"Key Findings"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Semantic Search Progress: Successfully implemented semantic search to identify potentially license-relevant lines within code files."}),"\n",(0,s.jsx)(n.li,{children:"License Matching Challenges: While line identification improved, accurately matching lines to the correct license remains a challenge. The current approach often mismatches lines to unrelated licenses."}),"\n",(0,s.jsx)(n.li,{children:"Metrics Needed: Currently lack quantitative metrics (e.g., accuracy) to assess the effectiveness of different semantic search approaches and embedding techniques."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The TF-IDF proved very poor at both finding license relevant lines and matching them to the correct license."}),"\n",(0,s.jsx)(n.li,{children:"The BoW was not as accurate as Sentence Transformers at finding the license relevant lines, but it was still very good for its size."}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"get_top_similar_license_lines"})," function automatically saved the embeddings for each approach and loads them if they already existed on disk."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conclusions-and-next-steps",children:"Conclusions and Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Refine License Matching: Continue exploring and refining semantic search techniques to improve license matching accuracy."}),"\n",(0,s.jsx)(n.li,{children:"Experiment with Models: Investigate alternative embedding models or fine-tuning existing models to better capture license-specific semantics. As model size is not a hindrance, no need to explore suboptimal strategies such as BoW and TF-IDF."}),"\n",(0,s.jsx)(n.li,{children:"Establish Evaluation Metrics: Develop metrics to quantitatively measure the performance of license identification and matching, enabling objective comparison of different approaches."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var t=i(96540);const s={},a=t.createContext(s);function l(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);