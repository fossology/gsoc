"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[25384],{26840:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/permGroupsRes-b2f569f05347064a1aaed97ce1a0bb0a.png"},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(96540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}},48194:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"2022/ui/updates/krishna/2022-08-14","title":"Week 9","description":"\x3c!--","source":"@site/docs/2022/ui/updates/krishna/2022-08-14.md","sourceDirName":"2022/ui/updates/krishna","slug":"/2022/ui/updates/krishna/2022-08-14","permalink":"/gsoc/docs/2022/ui/updates/krishna/2022-08-14","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2022/ui/updates/krishna/2022-08-14.md","tags":[{"inline":true,"label":"gsoc22","permalink":"/gsoc/docs/tags/gsoc-22"},{"inline":true,"label":"react","permalink":"/gsoc/docs/tags/react"},{"inline":true,"label":"Week 9","permalink":"/gsoc/docs/tags/week-9"}],"version":"current","frontMatter":{"title":"Week 9","author":"Krishna Mahato","author_url":"https://github.com/krishna9304","last_updated":"14th August, 2022","author_image_url":"https://avatars.githubusercontent.com/u/71918441?v=4","tags":["gsoc22","react","Week 9"]},"sidebar":"2022","previous":{"title":"Week 8","permalink":"/gsoc/docs/2022/ui/updates/krishna/2022-08-07"},"next":{"title":"Week 10","permalink":"/gsoc/docs/2022/ui/updates/krishna/2022-08-21"}}');var i=n(74848),r=n(28453);const o={title:"Week 9",author:"Krishna Mahato",author_url:"https://github.com/krishna9304",last_updated:"14th August, 2022",author_image_url:"https://avatars.githubusercontent.com/u/71918441?v=4",tags:["gsoc22","react","Week 9"]},l=void 0,a={},d=[{value:"Goals for the week",id:"goals-for-the-week",level:2},{value:"REST API Implemented -",id:"rest-api-implemented--",level:2},{value:"Designing <code>GET /uploads/{id}/perm-groups</code>",id:"designing-get-uploadsidperm-groups",level:3},{value:"Implementation :",id:"implementation-",level:3},{value:"PR Link : feat(api): PUT api to Set permissions for a upload and GET API to fetch respective permissions of groups #2275",id:"pr-link--featapi-put-api-to-set-permissions-for-a-upload-and-get-api-to-fetch-respective-permissions-of-groups-2275",level:3},{value:"Testing <code>GET /uploads/{id}/perm-groups</code>",id:"testing-get-uploadsidperm-groups",level:2},{value:"Conclusions and further plans",id:"conclusions-and-further-plans",level:2}];function p(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"goals-for-the-week",children:"Goals for the week"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Sl. No."}),(0,i.jsx)(s.th,{children:"Initial Goals"}),(0,i.jsx)(s.th,{children:"Completed"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"1."}),(0,i.jsx)(s.td,{children:"Solve requested changes on existing PRs"}),(0,i.jsx)(s.td,{children:"Done"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"2."}),(0,i.jsx)(s.td,{children:"Implement and design the API to get all the groups with their repective permssions for a given upload ID"}),(0,i.jsx)(s.td,{children:"Done"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"3."}),(0,i.jsx)(s.td,{children:"Creating the upload permissions page in the react UI"}),(0,i.jsx)(s.td,{children:"Not Started"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"rest-api-implemented--",children:"REST API Implemented -"}),"\n",(0,i.jsxs)(s.p,{children:["As the below API is a part of the ",(0,i.jsx)(s.strong,{children:"upload-permissions"})," functionality, I added the REST implementation in the same ",(0,i.jsx)(s.a,{href:"https://github.com/fossology/fossology/pull/2275",children:"PR#2275"}),"."]}),"\n",(0,i.jsxs)(s.h3,{id:"designing-get-uploadsidperm-groups",children:["Designing ",(0,i.jsx)(s.code,{children:"GET /uploads/{id}/perm-groups"})]}),"\n",(0,i.jsx)(s.p,{children:"I figured out the requirements of this API and designed the following :"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"/uploads/{id}/perm-groups:\n    parameters:\n      - name: id\n        required: true\n        description: Id of the upload\n        in: path\n        schema:\n          type: integer\n    get:\n      operationId: getGroupsWithPermissions\n      tags:\n        - Upload\n      summary: Get all the groups with their respective permissions for a upload\n      description:\n        Returns the list of all the groups with their respective permissions for a upload\n      responses:\n        '200':\n          description: Get Groups with permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadPermGroups'\n        '404':\n          description: Upload does not exist\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Info'\n        default:\n          $ref: '#/components/responses/defaultResponse'\n"})}),"\n",(0,i.jsx)(s.h3,{id:"implementation-",children:"Implementation :"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The API implementation of the ",(0,i.jsx)(s.code,{children:"/uploads/{id}/perm-groups"})," GET route to get all the groups with their respective permissions for a upload is done."]}),"\n",(0,i.jsxs)(s.li,{children:["This task included","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Creating a new GET route in the ",(0,i.jsx)(s.code,{children:"index.php"})," file inside ",(0,i.jsx)(s.code,{children:"www/ui/api"})," directory."]}),"\n",(0,i.jsxs)(s.li,{children:["Adding a new method ",(0,i.jsx)(s.code,{children:"getGroupsWithPermissions"})," in the ",(0,i.jsx)(s.code,{children:"UploadController"}),"class."]}),"\n",(0,i.jsxs)(s.li,{children:["Trying to re-use the methods that are already used in the ",(0,i.jsx)(s.code,{children:"upload_permissions"})," plugin."]}),"\n",(0,i.jsxs)(s.li,{children:["Testing the API via any API platform like ",(0,i.jsx)(s.strong,{children:"postman"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"pr-link--featapi-put-api-to-set-permissions-for-a-upload-and-get-api-to-fetch-respective-permissions-of-groups-2275",children:["PR Link : ",(0,i.jsx)(s.a,{href:"https://github.com/fossology/fossology/pull/2275",children:"feat(api): PUT api to Set permissions for a upload and GET API to fetch respective permissions of groups #2275"})]}),"\n",(0,i.jsxs)(s.h2,{id:"testing-get-uploadsidperm-groups",children:["Testing ",(0,i.jsx)(s.code,{children:"GET /uploads/{id}/perm-groups"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Pull the changes from the above ",(0,i.jsx)(s.strong,{children:"PR"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Use any API platform like ",(0,i.jsx)(s.strong,{children:"postman"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Provide the ",(0,i.jsx)(s.code,{children:"uploadId"})," in ",(0,i.jsx)(s.code,{children:"params"})," (",(0,i.jsx)(s.code,{children:"{id}"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["If your upload exists, you can expect a response like this.\n",(0,i.jsx)(s.img,{alt:"res-perm-groups",src:n(26840).A+"",width:"758",height:"564"}),"\n",(0,i.jsxs)(s.strong,{children:["Note: The above response also gives the ",(0,i.jsx)(s.code,{children:"publicPerm"})," parameter which states the public permissions of the upload."]})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"conclusions-and-further-plans",children:"Conclusions and further plans"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"This PR is currently in review and if any changes are requested, I'll be solving them in the coming week."}),"\n",(0,i.jsx)(s.li,{children:"Creating the upload permissions page in the react UI and implementing the APIs created."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);