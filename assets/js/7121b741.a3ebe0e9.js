"use strict";(self.webpackChunkgosc=self.webpackChunkgosc||[]).push([[84776],{18656:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"2021/scancode/updates/2021-07-20","title":"Week 7","description":"\x3c!--","source":"@site/docs/2021/scancode/updates/2021-07-20.md","sourceDirName":"2021/scancode/updates","slug":"/2021/scancode/updates/2021-07-20","permalink":"/gsoc/docs/2021/scancode/updates/2021-07-20","draft":false,"unlisted":false,"editUrl":"https://github.com/fossology/gsoc/edit/main/docs/2021/scancode/updates/2021-07-20.md","tags":[],"version":"current","frontMatter":{"title":"Week 7","author":"Sarita Singh"},"sidebar":"2021","previous":{"title":"Week 6","permalink":"/gsoc/docs/2021/scancode/updates/2021-07-13"},"next":{"title":"Week 8","permalink":"/gsoc/docs/2021/scancode/updates/2021-07-27"}}');var t=s(74848),c=s(28453);const r={title:"Week 7",author:"Sarita Singh"},o=void 0,a={},d=[{value:"Coding Week 7 Meeting 1",id:"coding-week-7-meeting-1",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Week 6 Progress",id:"week-6-progress",level:3},{value:"Discussions",id:"discussions",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",level:3},{value:"Coding Week 7 Meeting 2",id:"coding-week-7-meeting-2",level:2},{value:"Attendees",id:"attendees-1",level:3},{value:"Discussions",id:"discussions-1",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans-1",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"coding-week-7-meeting-1",children:"Coding Week 7 Meeting 1"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Date:2021-07-20"})}),"\n",(0,t.jsx)(n.h3,{id:"attendees",children:"Attendees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/mcjaeger",children:"Michael C. Jaeger"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/ag4ums",children:"Anupam Ghosh"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal Kumar"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/itssingh",children:"Sarita Singh"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"week-6-progress",children:"Week 6 Progress"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Populated copyright table for scancode."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Extended Email/URL/Author Browser to add scan result by ScanCode."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"There are two levels of pagination one for FOSSology and ScanCode and other for email/url/author tabs."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:s(51461).A+"",width:"1854",height:"1048"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"All the available options for Test replacement, Replace selected rows and, Deactivate selected rows are working good."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"discussions",children:"Discussions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["There is a bug in the pagination of the Email/URL/Author Browser. It could be possibly because of cookies. Check out storage of the inspect page, there will be index for different ",(0,t.jsx)(n.code,{children:"cookies"})," and it would be helpful in debugging."]}),"\n",(0,t.jsx)(n.li,{children:"Maintagent can be taken as a reference to create verbose flags. ScanCode UI will look like reuser/desider in the upload section."}),"\n",(0,t.jsxs)(n.li,{children:["There is a problem in finding start byte of copyright due to ",(0,t.jsx)(n.code,{children:"unicode character"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["ScanCode change ",(0,t.jsx)(n.code,{children:"\xa9"})," to ",(0,t.jsx)(n.code,{children:"(c)"})," and also removes some of the characters like ",(0,t.jsx)(n.code,{children:":"})," from ",(0,t.jsx)(n.code,{children:"copyright(c): Sarita Singh"})," and scan results to ",(0,t.jsx)(n.code,{children:"copyright (c) Sarita Singh"}),". This thing causes issue in finding start byte of copyright and also integrating scancode copyright to report(unable to remove redundant data)."]}),"\n",(0,t.jsxs)(n.li,{children:["Michael suggested to drop copyright and ",(0,t.jsx)(n.code,{children:"unicode characters"})," and then use sub-string matching to find approx. position(but it would be inaccurate)."]}),"\n",(0,t.jsxs)(n.li,{children:["Creating a ScanCode plugin to get ",(0,t.jsx)(n.code,{children:"copyright text"})," like ",(0,t.jsx)(n.code,{children:"matched license text"})," would solve the issue."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"conclusion-and-further-plans",children:"Conclusion and Further Plans"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fix author tabs."}),"\n",(0,t.jsx)(n.li,{children:"Use verbose flags for scancode agent like maintagent."}),"\n",(0,t.jsx)(n.li,{children:"creating a scancode plugin to get copyright text can work."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"coding-week-7-meeting-2",children:"Coding Week 7 Meeting 2"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Date:2021-07-23"})}),"\n",(0,t.jsx)(n.h3,{id:"attendees-1",children:"Attendees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/mcjaeger",children:"Michael C. Jaeger"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/GMishx",children:"Gaurav Mishra"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/ag4ums",children:"Anupam Ghosh"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/shaheemazmalmmd",children:"Shaheem Azmal"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/avinal",children:"Avinal Kumar"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/itssingh",children:"Sarita Singh"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"discussions-1",children:"Discussions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["ScheduleAgent function code in ",(0,t.jsx)(n.code,{children:"scancode/ui/agent_scancode.php"})," is correct."]}),"\n",(0,t.jsxs)(n.li,{children:["Format of flag for ",(0,t.jsx)(n.code,{children:"jq_cmd_args"})," depends upon the code we are using to parse this flag inside the ScanCode agent."]}),"\n",(0,t.jsx)(n.li,{children:"Gaurav suggested to take reference for cliOptions from copyright or ojo agent."}),"\n",(0,t.jsxs)(n.li,{children:["They are using ",(0,t.jsx)(n.code,{children:"Boost.Program_options"})," library which can be used to parse command line arguments and get ScanCode flags."]}),"\n",(0,t.jsx)(n.li,{children:"Further, this code can be reused for adding ScanCode agent to run by command line."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"conclusion-and-further-plans-1",children:"Conclusion and Further Plans"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["ScheduleAgent function in ",(0,t.jsx)(n.code,{children:"scancode/ui/agent_scancode.php"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Next step is to parse the scancode args to get scancode CLI flags."}),"\n",(0,t.jsx)(n.li,{children:"Use Boost program options for scancode CLI."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(96540);const t={},c=i.createContext(t);function r(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(c.Provider,{value:n},e.children)}},51461:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/author-a746aedb7f8c326a7bd277de7598f554.png"}}]);